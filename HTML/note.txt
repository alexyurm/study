Chapter 1 How did we get here?

-  Send header first then the markups. The headers tell your browser how to interpret the page markup that follows. E.g: Content-Type:

   Content-Type: text/html

   /text/html is the "content type" or "MIME type". Everything has its own MIME types (CSS, JavaScripts).

Chapter 2 Detecting HTML5 Features

-  HTML5 is just simply a collection of individual features.

   When you browser renders a web page, it constructs a Document Object Model (DOM), a collection of objects that represent the HTML elements on the page.

   Modernizr: An HTML5 Detection Library: An open source, MIT-licensed JavaScript library that detects support for many HTML5 and CSS3 features.

   Using Javascripts is another option tio test those HTML5 DOMs.

Chapter 3 What Does It All Mean?

-  The DocType

   Three different modes:

   1. Quick Mode

   In the Quirks mode, browsers violate contemporary Web format specifications in order to avoid "breaking" pages authored according to practices that were prevalent in the late 1990s.

   2. Standard Mode

   In the Standard mode, browsers try to give conforming documents the specification-wise correct treatment to the extent implemented in a particular browser. HTML5 calls this mode the "no quirks mode."

   3. Almost Standards Mode
   
   Firefox, Safari, Chrome, Opera (since 7.5) and IE8 also have a mode known as the "Almost Standard mode," which implements the vertical sizing of table cells traditionally and not regorously according to CSS2 specification.
   HTML5 calls the mode the "limited quirks mode". 

   Below happens to be one of the 15 doctypes that trigger standard mode in all modern browsers.

   ------------------------------------------------------
   <!DOCTYPE html 
   PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
   -----------------------------------------------------

   Or you can change it to the HTML5 doctype:

   ----------------
   <!DOCTYPE html>
   ----------------

-  The root element

   An HTMl page is a serious of nested elements. The root element of an HTML page is always <html>. E.g.

   <html lang="en">

-  The <head> element

   The <head> element contains metadata - information about the page, rather than the body of the page itself ( contained in the <body> element).

   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      <title>My Weblog</title>
      <link rel="stylesheet" type="text/css" href="style-original.css" />
      <link rel="alternate" type="application/atom+xml"
                           title="My Weblog feed"
                           href="/feed/" />
      <link rel="search" type="application/opensearchdescription+xml"
                        title="My Weblog search"
                        href="opensearch.xml" />
      <link rel="shortcut icon" href="/favicon.ico" />
   </head>

-  Meta element

   - Character Encoding

   You should always specify a character encoding on every HTML document, or bad things will happen. You can do it with the HTTP Content-Type header, the <meta http-

   equiv> declaration, or the shorter <meta charset> declaration, but please do it. The Web thanks you.

   <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

   - Friends and (Link) Relations

   Regular links (<a href>) simply point to another page. 

   Two categories of links can be created using the link element. 

   1) Links to external resources are links to resources that are to be used to augment the current document;
   2) Hyperlink links are links to other documents.

   - rel=stylesheet

   <link rel="stylesheet" href="style-original.css" />

   This is the most frequently used link relation in the world. <link rel="style sheet"> is for pointing to CSS rules that are stored in a seperate file. You can drop the type attribute since CSS is the only stylesheet language
   for the web.

   - rel=alternate

   <link rel="alternate"
      type="application/atom+xml"
      title="My Weblog feed"
      href="/feed/" />

   It can be used to combine with either RSS or Atom media type in the type attribute to enable something called "feed autodiscovery". E.g. Google Reader discovers that site has a new feed of the latest articles.

   You can also use rel=alternate in conjunction with other type attributes to indicate the some content in another format, like PDF.



   - 




   
