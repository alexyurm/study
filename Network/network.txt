Chapter 1: Protocol Layers and Their Service Models

   -  Five-layer internet protocol stack

      1) Application

      It is the layer where the network applications and their application-layer protocols reside:

      HTTP (Hypertext Transfer Protocol)
      SMTP (Symple Mail Transfer Protocol)
      FTP (File Transfer Protocol)
      DNS (Domain name system) -> translation of human-friendly names for Internet end systems like google.com to a 32-bit network address

      2) Transport

      The Internet's transport layer transports application-layer messages between application endpoints:
      
      TCP
      UDP

      3) Network

      The network layer provides the service of delivering the segment to the transport layer in the detination host. The Internet's network layer also contains routing protocols that determine the routes that datagrams take between sources and destinations.

      IPv4: 32-bit address
      IPv6: 128-bit address

      4) Link

      5) Physical

   -  Traceroute: provides delay measurement from source to route along end-end internet path towards destination.

Chapter 2: 

   -  To receive messages, process must have identifier. Identifier includes both IP address and port numbers associated with process on host.

      HTTP: 80
      SMTP: 25
      Telnet:
      FTP: 20(client), 21(server)
      
   -  HTTP
      
      1) File transmission time of HTTP per object:

         total = 2RTT + transmit time

      2) Two types of HTTP messages:

   -  DNS (Domain Name System)

      1) DNS maps IP address and name

      2) distributed database. It's implemented in hierarchy of many name servers.

      3) host, routers, name servers to communicate to resolve names(address/name translation)

      4) 

                              Root DNS Servers

      com DNS servers            org DNS servers   edu DNS servers

      yahoo.com amazon.com       pbs.org           mit.edu

   -  Socket Programming

      Socket: a door between application process and end-end-transport protocol(UDP or TCP).

Chapter 3 Transport Layer

   -  The Transport service provides logical communication between processes running on different hosts. Transport protocols run in end systems.

      1) Send side: breaks app messages into segments, passes to network layer.

      2) Recv side: reassembles segments into messages, passes to app layer.

   -  TCP
   
      1) congestion control
      2) flow control
      3) connection control
      4) TCP socket identified by 4-tuple:
            src IP address, src port number
            dest IP address, dest port number

      5) recv host uses all four values to direct segment to appropriate socket
      6) Servers host may support many simulataneous TCP sockets.
      7) Web Servers have different sockets for each connecting client. E.g. non-persistent HTTP will
         have different socket for each request.

   -  UDP (DNS, SNMP)
   
      1) "best effort"

         -  lost
         -  delivered out of order to app
   
      2) When host receives UDP segment: 

         -  Checks destination port number in segment.
         -  Directs UDP segment to socket with that port number
         -  IP datagrams with different source IP addresses and/or source numbers directed to same socket
         -  UDP socket identified by two-tuple:

            dest IP address, dest port number

   -  Demultiplexing(at rcv host):

      delivering received segments to correct socket

   -  Multiplexing(at send host):

      gathering data from multiple sockets, enveloping data with header (later used for demultiplexing)

Chapter 4 Network Layer

   -  Transport segment from sending to receiving host

      1) On sending side, encapsulates segments into datagrams.
      2) On receiving side, delivers segment to transport layer.
      3) Network layer protocols in every host, router.
      4) Router examines header fields in all IP datagrams passing through it.

   -  Two Key Network-Layer Functions

      1) Forwarding: move packets from router's input to appropriate router output.

         Analogy:

         process of planning trip from source to dest         

      2) Routing: determine route taken by packets from source to dest.

         Analogy:

         process of getting through single interchange

   -  Two key router functions

      1) Run routing algorithm/protocol (RIP, OSPF, BGP)
      2) forwarding datagrams from incoming to outgoing

      Input port(s) -----> Router Processor -----> output port(s)

      Delay and Packet losses can happen in input ports and output ports. Buffer is introduced!

   -  Internet Protocol(IP)
      
      Network links have MTU (max.transfer unit) - largest possible link-level frame.

   -  IP Datagram Fragmentation

      Not all link-layer protocols can carry network-layer packets of the same size. Some protocols can carry big datagrams, whereas other protocols can carry only
      little packets. E.g. Ethernet frames can carry up to 1,500 bytes of data, whereas frames for some wide-area links can carry no more than 576 bytes.

      -  one datagram becomes several datagrams;
      -  "reassembled" only at final destination.
      -  IP header bits used to identify, order related fragments(16-bit identifier, flags, fragment offset...)

         identifier: to identify the root datagram
         flags: more datagrams to come?
         fragment offset: the data section offset(in 8-byte)

   -  IP Addressing

      -  connection between host/router and physical link

      -  Subnets

         subnet part(high order bits)
         host part(low order bits)
      
         What is subnet?

         Device interfaces with same subnet part of IP address can physically reach other without intervening router.

         200.23.16.0/23

         11001000 00010111 00010000 00000000

         <------subnet part ------00><-host>
                                      part->

         How does a host get IP address?

         way 1: hardcoded
         way 2: DHCP: Dynamic Host Configuration Protocol

         host broadcasts “DHCP discover” msg
         DHCP server responds with “DHCP offer” msg
         host requests IP address: “DHCP request” msg
         DHCP server sends address: “DHCP ack” msg

         The ISPs own owns the DHCP server and get blocks of addresses via ICANN: Internet Corporation for Assigned Names and Numbers, which is responsible for

         -  allocate addresses
         -  manage DNS
         -  assigns domain names, resolves disputes.

      -  NAT: Network Address Translation

            rest of Internet        Local Network

            138.76.29.7    router   192.168.1.2
                                    192.168.1.3
                                    ...
                                    192.168.1.6

            All datagrams leaving local network have same single source NAT IP address: 138.76.29.7, different source port numbers.

         -  How does it get implemented?

                  NAT translation table
            WAN side addr     |  LAN side addr
            138.76.29.7, 5001 |  192.168.1.6, 3345

   -  ICMP: Internet Control Message Protocol

      -  It's used by hosts & routers to communicate network-level information.

         -  error reporting
         -  echo request/reply (used by ping)
         -  ICMP msgs carried in IP datagrams.
         -  ICMP message: type, code plus first 8 bytes of IP datagram causing error.

   -  Routing Algorithms

      
         -  Routing algorithm is used to find the shortest path.

         -  Dijsktra's Algorithm(!!)

         -  Distance Vector Algorithm(!!)

         -  Hierarchical Routing

            Scale: with 200 million destinations:

            -  Can't store all dest's in routing table!
            -  routing table exchange would swamp links!
            -  Each network admin may want to control routing in its own network(Think about the IT staff operates the BRCM network)

            To solve this problem, forwarding table configured by both intra- and inter-AS(autonomous systems)

            -  "intra-AS" routing protocol.
            -  routers in different AS can run different intra-AS routing protocol.

               intra-AS sets entries for internal dests
               inter-AS sets entries for external dests 

            -  Gateway router: Direct link to router in another AS

            Therefore, the forwarding table is created by Intra-AS Routing algorithm and Inter-AS Routing algorithm

   -  Routing in Internet

         Interior Gateway Protocols(IGP)

         -  RIP:  Routing Information Protocol

            -  distance vector algorithm: 
                  1) exchanged among neighbors every 30sec via Response Message (also called advertisement)
                  2) each advertisement: list of up to 25 destination subnets within AS
            -  distance metric: # of hops (max = 15 hops)            

         -  OSPF: Open Shortest Path First
         -  IGRP: Interior Gateway Routing Protocol(Cisco proprietary)

Chapter 5: Link Layer and LANs

   -  data-link layer has responsibility on transfering datagram from one node to adjacent node over a link
   -  encapsulate datagram into frame, adding header, trailer
   -  "MAC" addresses used in frame headers to identify source, dest.
         -  different from IP address!!
   -  flow control: pacing between adjacent sending and receiving nodes
   -  error detection: errors caused by signal attenuation, noise
      receiver detects presence of errors:
         - signals sender for retransmission or drops frame
   -  error correction
         -  receiver identifies and corrects(!!) bit error(s) without resorting to retransmission.
   -  half-duplex and full-duplex
         -  with half duplex, nodes at both ends of link can transmit, but not at same time.

   -  Link layer implemented in network interface card(NIC)

   -  Multiple Access Protocols

      -  distributed algorithm that determines how nodes share channel, i.e. determine when node can transmit
      -  communication about channel sharing must use channel itself!
      -  FDMA and TDMA
      -  random access MAC protocol specifies:
         -  how to detect collisions
         -  how to recover from collisions(e.g., via delayed retransmissions)
         
         CSMA/CD used in Ethernet
         CSMA/CA used in 802.11

      -  CSMA(Carrier Sense Multiple Access)

         -  listen before transmit:
            
            1) if channel sensed idle: transmit entire frame
            
            2) If channel sense busy: defer transmission

            It is like human don't interrupt others.

      -  MAC addresses and ARP
         
         -  48 bit MAC address(burned in NIC ROM, also sometimes software settable)

            function: get frame from one interface to another physically-connected interface (same network)

         -  Broadcast address = FF-FF-FF-FF-FF-FF-FF-FF

            -  Each IP node (host, router ) on LAN has ARP table
            -  ARP table: IP/MAC address mappings for some LAN nodes:

               <IP address; MAC address; TTL>

            -  Process:

               1) A wants to send datagram to B, and B's MAC address not in A's ARP table.
               2) A broadcasts ARP query packet, containing B's IP address
               3) dest MAC address == FF-FF-FF-FF-FF-FF-FF-FF, all machines on LAN receive ARP query.
               4) B receives ARP packet, replies to A with its (B's) MAC address

                  -  frame sent to A's MAC address(unicast)

               5) A caches(saves) IP-to-MAC address pair in its ARP table until information becomes old(times out)
              
               note: ARP is "plug-and-play". Understand the ARP process!! it is very very important.

         -  Link-layer switches

            1) Hubs

               -  bits comming in one link go out all other links at same rate.
               -  All nodes connected to hub can collide with one another
               -  no frame buffering
               -  no CSMA/CD at hub: host NICs detect collisions.

            2) Switch
   
               -  store, forward Ethernet frames.
               -  examine incoming frame's MAC address, selectively forward frame to one-or-more outgoing links when frame is to be forwarded on
                  segment, uses CSMA/CD to access segment.
               -  transparent: hosts are unware CSMA/CD to access segment.
               -  plug-and-play, self learning. switches do not need to be configured.

               -  Each switch has a switch table, each entry:

                  MAC address of host, interface to reach host, time stamp

Chapter Apache

    -   URL rewriting

        -   What is "URL Rewriting"

            Typically, this gives URLs like the following, telling the relevant script on a site to load
            porduct number 7.

            http://www.pets.com/show_a_product.php?product_id=7

            It's much easier to remember and vastly easier to read out for the following:

            http://www.pets.com/parrots/norwegian-blue/

            Now we're getting somewhere. You can tell from the URL, even when it's taken out of context, what you're 
            likely to find on that page. Search engines can split that URL into words (hyphens in URLs are treated 
            as spaces by search engines, whereas underscores are not), and they can use that information to better 
            determine the content of the page. It's an easy URL to remember and to pass to another person.

            Unfortunately, the last URL cannot be easily understood by a server without some work on our part. 
            When a request is made for that URL, the server needs to work out how to process that URL so that it 
            knows what to send back to the user. URL rewriting is the technique used to "translate" a URL like 
            the last one into something the server can understand.

        -   Platforms and Tools 

            E.g. Apache is the easiest system to get URL 

            in terminal, do:

            sudo a2enmod rewrite

            and

            sudo service apache2 restart
